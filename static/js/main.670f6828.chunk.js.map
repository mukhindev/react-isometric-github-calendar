{"version":3,"sources":["utils/isometric-engine.ts","components/IsometricPolygon/IsometricPolygon.tsx","components/IsometricBox/IcometricBox.tsx","utils/constants.ts","components/GithubDay/GithubDay.tsx","components/GithubWeek/GithubWeek.tsx","components/GithubCalendar/GithubCalendar.tsx","utils/github-api.ts","components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["isometricEngine","convert","x","y","a","b","z","Math","tan","PI","IsometricPolygon","props","className","points","color","mix","result","i","points2D","trim","getPolygonPoints","fill","stroke","IcometricBox","position","size","colors","map","index","process","PROXY_GITHUB_CALENDAR","REACT_APP_PROXY_GITHUB_CALENDAR","GITHUB_GRAPHQL","REACT_APP_GITHUB_GRAPHQL","GITHUB_LOGIN","REACT_APP_GITHUB_LOGIN","GITHUB_KEY","REACT_APP_GITHUB_KEY","GithubDay","weekIndex","dayIndex","contributionCount","GithubWeek","days","length","day","GithubCalendar","totalContributions","months","weeks","viewBox","xmlns","week","contributionDays","getFromProxyGitHubCalendar","Error","fetch","getFromGitHubApi","method","headers","Authorization","body","login","JSON","stringify","query","githubApi","getCalendarData","response","json","App","useState","calendarData","setCalendarData","fecthCalendarData","useCallback","data","user","contributionsCollection","contributionCalendar","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.670f6828.chunk.js","sourcesContent":["export type coordinates3d = {\n  x: number\n  y: number\n  z: number\n}\n\nexport type coordinates2d = {\n  a: number\n  b: number\n}\n\ninterface IIsometricEngine {\n  convert: ({ x, y, z }: coordinates3d) => coordinates2d\n}\n\nconst isometricEngine: IIsometricEngine = {\n  convert ({ x, y, z }) {\n    return {\n      a: (-3 * x) + (3 * y) + (0),\n      b: ((3 * x) + (3 * y) + (-6 * z)) * Math.tan(30 * Math.PI/180)\n    }\n  }\n}\n\nexport default isometricEngine;","import React from 'react';\nimport isometricEngine from '../../utils/isometric-engine'\nimport './IcometricPolygon.css'\n\ninterface IIsometricPolygon {\n  points: any[]\n  color: any\n  className?: string\n}\n\nconst IsometricPolygon: React.FC<IIsometricPolygon> = (props) => {\n  const {\n    className = '',\n    points,\n    color\n  } = props;\n\n  const mix: string = !!className ? ` ${className}` : '';\n\n  const getPolygonPoints = (points: any) => {\n    let result = ''\n    for (const i in points) {\n      const { x, y, z } = points[i]\n      const points2D = isometricEngine.convert({ x, y, z })\n      result = `${result} ${points2D.a},${points2D.b}`.trim()\n    }\n    return result\n  }\n\n  return (\n    <polygon\n      className={'isometric-polygon' + mix}\n      points={ getPolygonPoints(points) }\n      fill={ color }\n      stroke=\"black\"\n    />\n  );\n};\n\nexport default IsometricPolygon;\n","import React from 'react';\nimport { coordinates3d } from '../../utils/isometric-engine'\nimport IsometricPolygon from '../IsometricPolygon/IsometricPolygon';\nimport './IcometricBox.css'\n\ninterface IIcometricBox {\n  position: coordinates3d\n  size: coordinates3d\n  colors: any[]\n  className?: string\n}\n\nconst IcometricBox: React.FC<IIcometricBox> = (props) => {\n  const {\n    className = '',\n    position,\n    size,\n    colors = ['#C7C7C7', '#DEDEDE', '#F1F1F1']\n  } = props;\n\n  const mix: string = !!className ? ` ${className}` : '';\n\n  const getPolygons = () => {\n    return [\n      [\n        {x: size.x + position.x, y: position.y, z: position.z},\n        {x: size.x + position.x, y: size.y + position.y, z: position.z},\n        {x: size.x + position.x, y: size.y + position.y, z: size.z + position.z},\n        {x: size.x + position.x, y: position.y, z: size.z + position.z},\n      ],\n      [\n        {x: position.x, y: size.y + position.y, z: position.z},\n        {x: size.x + position.x, y: size.y + position.y, z: position.z},\n        {x: size.x + position.x, y: size.y + position.y, z: size.z + position.z},\n        {x: position.x, y: size.y + position.y, z: size.z + position.z},\n      ],\n      [\n        {x: position.x, y: position.y, z: size.z + position.z},\n        {x: size.x + position.x, y: position.y, z: size.z + position.z},\n        {x: size.x + position.x, y: size.y + position.y, z: size.z + position.z},\n        {x: position.x, y: size.y + position.y, z: size.z + position.z}\n      ]\n    ]\n  }\n\n  return (\n    <g className={'isometric-box' + mix}>\n      {getPolygons().map((points, index) => (\n        <IsometricPolygon\n          points={ points }\n          color= { colors[index] }\n          key={ index }\n        />\n      ))}\n    </g>\n  );\n};\n\nexport default IcometricBox;\n","export const {\n  REACT_APP_PROXY_GITHUB_CALENDAR: PROXY_GITHUB_CALENDAR,\n  REACT_APP_GITHUB_GRAPHQL: GITHUB_GRAPHQL,\n  REACT_APP_GITHUB_LOGIN: GITHUB_LOGIN,\n  REACT_APP_GITHUB_KEY: GITHUB_KEY,\n} = process.env;\n\nexport const BOX_START_HEIGHT = 2.5\nexport const BOX_HEIGHT_MULTIPLIER = 2\nexport const BOX_SIZE_X = 8\nexport const BOX_SIZE_Y = 8\nexport const BOX_GAP_X = 1.5\nexport const BOX_GAP_Y = 1.5\n","import React from 'react';\nimport IsometricBox from '../IsometricBox/IcometricBox'\nimport {\n  BOX_SIZE_X, BOX_SIZE_Y,\n  BOX_GAP_X, BOX_GAP_Y, \n  BOX_START_HEIGHT, BOX_HEIGHT_MULTIPLIER\n} from '../../utils/constants'\nimport './GithubDay.css'\n\ninterface IGithubDay {\n  dayIndex: number\n  weekIndex: number\n  contributionCount: number\n  className?: string\n}\n\nconst GithubDay: React.FC<IGithubDay> = (props) => {\n  const {\n    className = '',\n    weekIndex,\n    dayIndex,\n    contributionCount\n  } = props;\n\n  const mix: string = !!className ? ` ${className}` : '';\n\n  const getPosition = () => ({\n    x: dayIndex * (BOX_SIZE_X + BOX_GAP_X), \n    y: weekIndex * (BOX_SIZE_Y + BOX_GAP_Y), \n    z: 0\n  })\n\n  const getSize = () => ({\n    x: BOX_SIZE_X,\n    y: BOX_SIZE_Y,\n    z: BOX_START_HEIGHT + contributionCount * BOX_HEIGHT_MULTIPLIER\n  })\n\n  const getColors = () => {\n    if (contributionCount === 0) return ['#C7C7C7', '#DEDEDE', '#F1F1F1']\n    if (contributionCount < 7) return ['#B9C874', '#CBD888', '#DCEA9B']\n    if (contributionCount < 13) return ['#70AA53', '#84BC68', '#98CE7C']\n    if (contributionCount < 21) return ['#008A25', '#2B9D3D', '#48B056']\n    if (contributionCount >= 21) return ['#004F08', '#006417', '#157933']\n    return ['#004F08', '#006417', '#157933']\n  }\n\n  return (\n    <g className={'github-day' + mix}>\n      <IsometricBox\n        position={ getPosition() }\n        size={ getSize() }\n        colors={ getColors() }\n      />\n    </g>\n  );\n};\n\nexport default GithubDay;\n","import React from 'react';\nimport GithubDay from '../GithubDay/GithubDay';\nimport './GithubWeek.css'\n\ninterface IGithubWeek {\n  days: any[]\n  weekIndex: number\n  className?: string\n}\n\nconst GithubWeek: React.FC<IGithubWeek> = (props) => {\n  const {\n    className = '',\n    days,\n    weekIndex\n  } = props;\n\n  const mix: string = !!className ? ` ${className}` : '';\n\n  return (\n    <g className={'github-week' + mix}>\n      {days.length && days.map((day, index) => (\n        <GithubDay\n          dayIndex={ index }\n          weekIndex={ weekIndex }\n          contributionCount={ day.contributionCount }\n          key={ index }\n        />\n      ))}\n    </g>\n  );\n};\n\nexport default GithubWeek;\n","import React from 'react';\nimport GithubWeek from '../GithubWeek/GithubWeek';\nimport './GithubCalendar.css'\n\ninterface IGithubCalendar {\n  totalContributions?: number\n  months?: any[]\n  weeks?: any[]\n  className?: string\n}\n\nconst GithubCalendar: React.FC<IGithubCalendar> = (props) => {\n  const {\n    className = '',\n    totalContributions,\n    months,\n    weeks\n  } = props;\n\n  if (!totalContributions || !months || !weeks ) return <div>Загрузка ...</div>\n\n  const mix: string = !!className ? ` ${className}` : '';\n\n  return (\n    <div className={'github-calendar' + mix}>\n      <svg\n        className=\"github-calendar__svg\"\n        viewBox={`-320 -120 ${1980} ${1155}`}\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        {weeks.length && weeks.map((week, index) => (\n          <GithubWeek\n            days={ week?.contributionDays }\n            weekIndex= { index }\n            key={ index } \n          />\n        ))}\n      </svg>\n    </div>\n  );\n};\n\nexport default GithubCalendar;\n","import {\n  PROXY_GITHUB_CALENDAR,\n  GITHUB_GRAPHQL,\n  GITHUB_LOGIN,\n  GITHUB_KEY,\n} from './constants';\n\nconst getQuery = (login: string) => JSON.stringify({\n  query: `query {\n    user(login: \"${login}\") {\n      contributionsCollection {\n        contributionCalendar {\n          totalContributions\n          months {\n            name\n            totalWeeks\n            year\n            firstDay\n          }\n          weeks {\n            contributionDays {\n              color\n              contributionCount\n              date\n              weekday\n            }\n            firstDay\n          }\n        }\n      }\n    }\n  }`,\n});\n\nconst getFromProxyGitHubCalendar = async () => {\n  if (!PROXY_GITHUB_CALENDAR) throw new Error('REACT_APP_PROXY_GITHUB_CALENDAR variable not defined in .env file');\n  return await fetch(PROXY_GITHUB_CALENDAR)\n}\n\nconst getFromGitHubApi = async () => {\n  if (!GITHUB_GRAPHQL) throw new Error('REACT_APP_GITHUB_GRAPHQL variable not defined in .env file');\n  if (!GITHUB_LOGIN) throw new Error('REACT_APP_GITHUB_LOGIN variable not defined in .env file');\n  if (!GITHUB_KEY) throw new Error('REACT_APP_GITHUB_KEY variable not defined in .env file');\n  return await fetch(GITHUB_GRAPHQL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${GITHUB_KEY}`\n    },\n    body: getQuery(GITHUB_LOGIN)\n  });\n}\n\nconst githubApi = {\n  getCalendarData: async () => {\n    if (PROXY_GITHUB_CALENDAR) {\n      const response = await getFromProxyGitHubCalendar();\n      return response.json();\n    } else {\n      const response = await getFromGitHubApi();\n      return response.json();\n    }\n  }\n};\n\nexport default githubApi;\n","import { useCallback, useEffect, useState } from 'react';\nimport GitHubCalendar from '../GithubCalendar/GithubCalendar';\nimport githubApi from '../../utils/github-api'\nimport './App.css';\n\nfunction App() {\n  const [calendarData, setCalendarData] = useState({} as any);\n\n  const fecthCalendarData = useCallback(async () => {\n    const { data } = await githubApi.getCalendarData();\n    setCalendarData(data?.user?.contributionsCollection?.contributionCalendar);\n  }, [])\n\n  useEffect(() => {\n    fecthCalendarData()\n  }, [fecthCalendarData])\n\n  return (\n    <div className=\"app\">\n      <GitHubCalendar\n        className=\"app__github-calendar\"\n        totalContributions={ calendarData?.totalContributions }\n        months={ calendarData?.months }\n        weeks={ calendarData?.weeks }\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}